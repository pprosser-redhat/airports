<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:cxf="http://camel.apache.org/schema/cxf"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="       http://www.springframework.org/schema/beans           http://www.springframework.org/schema/beans/spring-beans.xsd       http://camel.apache.org/schema/cxf           http://camel.apache.org/schema/cxf/camel-cxf.xsd       http://camel.apache.org/schema/spring           http://camel.apache.org/schema/spring/camel-spring.xsd">
    <cxf:cxfEndpoint address="http://0.0.0.0:8080/cxf/airports"
        id="airportEndpoint" serviceClass="operators.OperatorsService"/>
    <bean class="org.apache.camel.component.http4.HttpComponent" id="fusehttp4"/>
    <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">
        <dataFormats>
            <jaxb contentTypeHeader="false" contextPath="operators"
                filterNonXmlChars="false" fragment="false" id="jaxb"
                ignoreJAXBElement="false" mustBeJAXBElement="false"
                prettyPrint="false" schemaSeverityLevel="0"/>
        </dataFormats>
        <route id="RoutetoCorrectSOAPOperation" streamCache="true">
            <from id="_to1" uri="cxf:bean:airportEndpoint"/>
            <recipientList id="_recipientList1">
                <simple>direct:${header.operationName}</simple>
            </recipientList>
        </route>
        <route id="OperatorQuery" streamCache="true">
            <from id="_to2" uri="direct:operatorQuery"/>
            <process id="_process2" ref="operatorQueryProcessor"/>
            <log id="test" message=">>>>>> ${body.operator} and ${body.operatorType}"/>
            <choice id="_BuildQueryString">
                <description>Build Query String</description>
                <when id="filterby operator and operatorType">
                    <simple>${body.operator} &amp;&amp; ${body.operatorType}</simple>
                    <setHeader headerName="Exchange.HTTP_QUERY" id="_operatorandoperatortype">
                        <simple>operator=${body.operator}&amp;operator_type=${body.operatorType}</simple>
                    </setHeader>
                </when>
                <when id="filterby operator">
                    <simple>${body.operator}</simple>
                    <setHeader headerName="Exchange.HTTP_QUERY" id="_operator">
                        <simple>operator=${body.operator}</simple>
                    </setHeader>
                </when>
                <when id="filterby operatortype">
                    <simple>${body.operatorType}</simple>
                    <setHeader headerName="Exchange.HTTP_QUERY" id="_operatorType">
                        <simple>operator_type=${body.operatorType}</simple>
                    </setHeader>
                </when>
                <otherwise id="_nofilter">
                    <description>NoFilter</description>
                </otherwise>
            </choice>
            <setBody id="_setBody1">
                <constant/>
            </setBody>
            <to id="callRestService" uri="http4:daa-demo-application-daa-demo-project.apps.daaireland-e0bc.openshiftworkshop.com/rest/flightoperators?bridgeEndpoint=true&amp;httpMethod=GET"/>
            <log id="route-log" message=">>> ${body}"/>
            <unmarshal id="_unmarshal1">
                <json library="Jackson"/>
            </unmarshal>
            <process id="_process1" ref="returnProcessor"/>
        </route>
    </camelContext>
</beans>
